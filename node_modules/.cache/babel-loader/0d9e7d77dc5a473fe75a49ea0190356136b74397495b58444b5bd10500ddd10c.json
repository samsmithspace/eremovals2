{"ast":null,"code":"var _s = $RefreshSig$();\n// src/features/marketing/hooks/useTestimonials.js\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\n/**\r\n * Hook for managing testimonials and FAQ data\r\n * @returns {Object} Testimonials and FAQ data with computed ratings\r\n */\nexport const useTestimonials = () => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const testimonials = useMemo(() => {\n    const rawTestimonials = t('testimonials', {\n      returnObjects: true\n    });\n    return rawTestimonials.map(testimonial => ({\n      ...testimonial,\n      rating: generateRating(testimonial.name)\n    }));\n  }, [t]);\n  const faqs = useMemo(() => {\n    return t('faqs', {\n      returnObjects: true\n    });\n  }, [t]);\n  return {\n    testimonials,\n    faqs\n  };\n};\n\n// Helper function to generate consistent ratings\n_s(useTestimonials, \"KSrhMZ5ExeeiFUOLnw43bB3af3w=\", false, function () {\n  return [useTranslation];\n});\nconst generateRating = name => {\n  const seed = name.split('').reduce((sum, char) => sum + char.charCodeAt(0), 0);\n  return seed % 2 === 0 ? 5 : 4.5;\n};\nexport default useTestimonials;","map":{"version":3,"names":["useMemo","useTranslation","useTestimonials","_s","t","testimonials","rawTestimonials","returnObjects","map","testimonial","rating","generateRating","name","faqs","seed","split","reduce","sum","char","charCodeAt"],"sources":["C:/Users/Runze Xia/Desktop/eremovals2/src/features/marketing/hooks/useTestimonials.js"],"sourcesContent":["// src/features/marketing/hooks/useTestimonials.js\r\nimport { useMemo } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n/**\r\n * Hook for managing testimonials and FAQ data\r\n * @returns {Object} Testimonials and FAQ data with computed ratings\r\n */\r\nexport const useTestimonials = () => {\r\n    const { t } = useTranslation();\r\n\r\n    const testimonials = useMemo(() => {\r\n        const rawTestimonials = t('testimonials', { returnObjects: true });\r\n\r\n        return rawTestimonials.map(testimonial => ({\r\n            ...testimonial,\r\n            rating: generateRating(testimonial.name)\r\n        }));\r\n    }, [t]);\r\n\r\n    const faqs = useMemo(() => {\r\n        return t('faqs', { returnObjects: true });\r\n    }, [t]);\r\n\r\n    return {\r\n        testimonials,\r\n        faqs\r\n    };\r\n};\r\n\r\n// Helper function to generate consistent ratings\r\nconst generateRating = (name) => {\r\n    const seed = name.split('').reduce((sum, char) => sum + char.charCodeAt(0), 0);\r\n    return (seed % 2 === 0) ? 5 : 4.5;\r\n};\r\n\r\nexport default useTestimonials;"],"mappings":";AAAA;AACA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,cAAc,QAAQ,eAAe;;AAE9C;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM;IAAEC;EAAE,CAAC,GAAGH,cAAc,CAAC,CAAC;EAE9B,MAAMI,YAAY,GAAGL,OAAO,CAAC,MAAM;IAC/B,MAAMM,eAAe,GAAGF,CAAC,CAAC,cAAc,EAAE;MAAEG,aAAa,EAAE;IAAK,CAAC,CAAC;IAElE,OAAOD,eAAe,CAACE,GAAG,CAACC,WAAW,KAAK;MACvC,GAAGA,WAAW;MACdC,MAAM,EAAEC,cAAc,CAACF,WAAW,CAACG,IAAI;IAC3C,CAAC,CAAC,CAAC;EACP,CAAC,EAAE,CAACR,CAAC,CAAC,CAAC;EAEP,MAAMS,IAAI,GAAGb,OAAO,CAAC,MAAM;IACvB,OAAOI,CAAC,CAAC,MAAM,EAAE;MAAEG,aAAa,EAAE;IAAK,CAAC,CAAC;EAC7C,CAAC,EAAE,CAACH,CAAC,CAAC,CAAC;EAEP,OAAO;IACHC,YAAY;IACZQ;EACJ,CAAC;AACL,CAAC;;AAED;AAAAV,EAAA,CAtBaD,eAAe;EAAA,QACVD,cAAc;AAAA;AAsBhC,MAAMU,cAAc,GAAIC,IAAI,IAAK;EAC7B,MAAME,IAAI,GAAGF,IAAI,CAACG,KAAK,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9E,OAAQL,IAAI,GAAG,CAAC,KAAK,CAAC,GAAI,CAAC,GAAG,GAAG;AACrC,CAAC;AAED,eAAeZ,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}