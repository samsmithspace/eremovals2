{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Runze Xia\\\\Desktop\\\\eremovals2\\\\src\\\\features\\\\locations\\\\components\\\\LocationSelection.js\",\n  _s = $RefreshSig$();\n// src/features/locations/components/LocationSelection.js\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport GoogleMapComponent from './GoogleMapComponent';\nimport { Button } from '../../../common/components/ui';\nimport routes from '../../../config/routes';\n\n/**\r\n * Main location selection component for choosing pickup and destination locations\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationSelection = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    lang\n  } = useParams();\n  const {\n    t\n  } = useTranslation();\n  const [startLocation, setStartLocation] = useState(null);\n  const [destinationLocation, setDestinationLocation] = useState(null);\n\n  // Get location type from navigation state\n  const locationType = location.state || {};\n  const handleStartLocationSelected = place => {\n    setStartLocation(place);\n  };\n  const handleDestinationLocationSelected = place => {\n    setDestinationLocation(place);\n  };\n  const handleConfirm = () => {\n    if (startLocation && destinationLocation) {\n      navigate(routes.generate.quote(lang), {\n        state: {\n          startLocation,\n          destinationLocation,\n          locationType\n        }\n      });\n    }\n  };\n  const canProceed = startLocation && destinationLocation;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"location-selection\",\n    children: [/*#__PURE__*/_jsxDEV(LocationSelectionSection, {\n      title: t('moveFrom', 'Where are you moving from?'),\n      onLocationSelected: handleStartLocationSelected,\n      className: \"start-location-section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LocationSelectionSection, {\n      title: t('moveTo', 'Where are you moving to?'),\n      onLocationSelected: handleDestinationLocationSelected,\n      className: `destination-location-section ${startLocation ? 'slide-up' : ''}`,\n      isVisible: !!startLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), canProceed && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmation-section\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleConfirm,\n        variant: \"primary\",\n        size: \"large\",\n        className: \"confirm-button\",\n        children: t('confirmLocations', 'Confirm Locations')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n/**\r\n * Individual location selection section component\r\n */\n_s(LocationSelection, \"7chDy41ehGVKnNZG5PXISDcpbj8=\", false, function () {\n  return [useLocation, useNavigate, useParams, useTranslation];\n});\n_c = LocationSelection;\nconst LocationSelectionSection = ({\n  title,\n  onLocationSelected,\n  className = '',\n  isVisible = true\n}) => {\n  if (!isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `location-section ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMapComponent, {\n      onPlaceSelected: onLocationSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_c2 = LocationSelectionSection;\nLocationSelectionSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  onLocationSelected: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  isVisible: PropTypes.bool\n};\nexport default LocationSelection;\nvar _c, _c2;\n$RefreshReg$(_c, \"LocationSelection\");\n$RefreshReg$(_c2, \"LocationSelectionSection\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","useParams","useTranslation","PropTypes","GoogleMapComponent","Button","routes","jsxDEV","_jsxDEV","LocationSelection","_s","location","navigate","lang","t","startLocation","setStartLocation","destinationLocation","setDestinationLocation","locationType","state","handleStartLocationSelected","place","handleDestinationLocationSelected","handleConfirm","generate","quote","canProceed","className","children","LocationSelectionSection","title","onLocationSelected","fileName","_jsxFileName","lineNumber","columnNumber","isVisible","onClick","variant","size","_c","onPlaceSelected","_c2","propTypes","string","isRequired","func","bool","$RefreshReg$"],"sources":["C:/Users/Runze Xia/Desktop/eremovals2/src/features/locations/components/LocationSelection.js"],"sourcesContent":["// src/features/locations/components/LocationSelection.js\r\nimport React, { useState } from 'react';\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport PropTypes from 'prop-types';\r\nimport GoogleMapComponent from './GoogleMapComponent';\r\nimport { Button } from '../../../common/components/ui';\r\nimport routes from '../../../config/routes';\r\n\r\n/**\r\n * Main location selection component for choosing pickup and destination locations\r\n */\r\nconst LocationSelection = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const { lang } = useParams();\r\n    const { t } = useTranslation();\r\n\r\n    const [startLocation, setStartLocation] = useState(null);\r\n    const [destinationLocation, setDestinationLocation] = useState(null);\r\n\r\n    // Get location type from navigation state\r\n    const locationType = location.state || {};\r\n\r\n    const handleStartLocationSelected = (place) => {\r\n        setStartLocation(place);\r\n    };\r\n\r\n    const handleDestinationLocationSelected = (place) => {\r\n        setDestinationLocation(place);\r\n    };\r\n\r\n    const handleConfirm = () => {\r\n        if (startLocation && destinationLocation) {\r\n            navigate(routes.generate.quote(lang), {\r\n                state: {\r\n                    startLocation,\r\n                    destinationLocation,\r\n                    locationType\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const canProceed = startLocation && destinationLocation;\r\n\r\n    return (\r\n        <div className=\"location-selection\">\r\n            {/* Start Location Section */}\r\n            <LocationSelectionSection\r\n                title={t('moveFrom', 'Where are you moving from?')}\r\n                onLocationSelected={handleStartLocationSelected}\r\n                className=\"start-location-section\"\r\n            />\r\n\r\n            {/* Destination Location Section - Animated entry */}\r\n            <LocationSelectionSection\r\n                title={t('moveTo', 'Where are you moving to?')}\r\n                onLocationSelected={handleDestinationLocationSelected}\r\n                className={`destination-location-section ${startLocation ? 'slide-up' : ''}`}\r\n                isVisible={!!startLocation}\r\n            />\r\n\r\n            {/* Confirmation Button */}\r\n            {canProceed && (\r\n                <div className=\"confirmation-section\">\r\n                    <Button\r\n                        onClick={handleConfirm}\r\n                        variant=\"primary\"\r\n                        size=\"large\"\r\n                        className=\"confirm-button\"\r\n                    >\r\n                        {t('confirmLocations', 'Confirm Locations')}\r\n                    </Button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n/**\r\n * Individual location selection section component\r\n */\r\nconst LocationSelectionSection = ({\r\n                                      title,\r\n                                      onLocationSelected,\r\n                                      className = '',\r\n                                      isVisible = true\r\n                                  }) => {\r\n    if (!isVisible) return null;\r\n\r\n    return (\r\n        <div className={`location-section ${className}`}>\r\n            <h2 className=\"section-title\">{title}</h2>\r\n            <GoogleMapComponent onPlaceSelected={onLocationSelected} />\r\n        </div>\r\n    );\r\n};\r\n\r\nLocationSelectionSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    onLocationSelected: PropTypes.func.isRequired,\r\n    className: PropTypes.string,\r\n    isVisible: PropTypes.bool\r\n};\r\n\r\nexport default LocationSelection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}