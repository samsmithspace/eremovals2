{"ast":null,"code":"var _s = $RefreshSig$();\n// src/features/inventory/hooks/useInventoryForm.js\nimport { useState, useEffect, useCallback } from 'react';\n\n/**\r\n * Custom hook for managing inventory form state and validation\r\n * @param {Object} initialDetails - Initial inventory details\r\n * @param {Function} onDetailsChange - Callback when details change\r\n * @returns {Object} Inventory form state and handlers\r\n */\nexport const useInventoryForm = (initialDetails = {}, onDetailsChange) => {\n  _s();\n  // Initialize box details with default structure\n  const initializeBoxDetails = () => [{\n    boxSize: 'small',\n    numberOfBoxes: 0\n  }, {\n    boxSize: 'medium',\n    numberOfBoxes: 0\n  }, {\n    boxSize: 'large',\n    numberOfBoxes: 0\n  }, {\n    boxSize: 'extraLarge',\n    numberOfBoxes: 0\n  }];\n\n  // Initialize state\n  const [inventoryData, setInventoryData] = useState({\n    boxDetails: initialDetails.boxDetails || initializeBoxDetails(),\n    furnitureDetails: initialDetails.furnitureDetails || [],\n    applianceDetails: initialDetails.applianceDetails || [],\n    specialItems: initialDetails.specialItems || []\n  });\n  const [floorDetails, setFloorDetails] = useState({\n    liftAvailable: initialDetails.liftAvailable || false,\n    numberOfStairs: initialDetails.numberOfStairs || 0,\n    liftAvailabledest: initialDetails.liftAvailabledest || false,\n    numberofstairsright: initialDetails.numberofstairsright || 0\n  });\n\n  // Validation state\n  const [isValid, setIsValid] = useState(false);\n\n  // Validate inventory data\n  const validateInventory = useCallback(() => {\n    const hasBoxes = inventoryData.boxDetails.some(box => box.numberOfBoxes > 0);\n    const hasFurniture = inventoryData.furnitureDetails.some(furniture => furniture.item && furniture.quantity > 0);\n    const hasAppliances = inventoryData.applianceDetails.some(appliance => appliance.item && appliance.quantity > 0);\n    const hasSpecialItems = inventoryData.specialItems.some(item => item.type && item.description.trim());\n\n    // At least one item must be selected\n    const hasItems = hasBoxes || hasFurniture || hasAppliances || hasSpecialItems;\n\n    // All special items must have both type and description\n    const validSpecialItems = inventoryData.specialItems.every(item => item.type && item.description.trim() || !item.type && !item.description.trim());\n\n    // All furniture items must have both item and quantity\n    const validFurniture = inventoryData.furnitureDetails.every(furniture => furniture.item && furniture.quantity > 0 || !furniture.item && furniture.quantity === 1);\n\n    // All appliance items must have both item and quantity\n    const validAppliances = inventoryData.applianceDetails.every(appliance => appliance.item && appliance.quantity > 0 || !appliance.item && appliance.quantity === 1);\n    return hasItems && validSpecialItems && validFurniture && validAppliances;\n  }, [inventoryData]);\n\n  // Update validation state when data changes\n  useEffect(() => {\n    const valid = validateInventory();\n    setIsValid(valid);\n  }, [validateInventory]);\n\n  // Notify parent of changes\n  useEffect(() => {\n    if (onDetailsChange) {\n      const allDetails = {\n        ...inventoryData,\n        ...floorDetails\n      };\n      onDetailsChange(allDetails);\n    }\n  }, [inventoryData, floorDetails, onDetailsChange]);\n\n  // Box details handlers\n  const updateBoxDetails = useCallback(newBoxDetails => {\n    setInventoryData(prev => ({\n      ...prev,\n      boxDetails: newBoxDetails\n    }));\n  }, []);\n\n  // Furniture details handlers\n  const updateFurnitureDetails = useCallback(newFurnitureDetails => {\n    setInventoryData(prev => ({\n      ...prev,\n      furnitureDetails: newFurnitureDetails\n    }));\n  }, []);\n\n  // Appliance details handlers\n  const updateApplianceDetails = useCallback(newApplianceDetails => {\n    setInventoryData(prev => ({\n      ...prev,\n      applianceDetails: newApplianceDetails\n    }));\n  }, []);\n\n  // Special items handlers\n  const updateSpecialItems = useCallback(newSpecialItems => {\n    setInventoryData(prev => ({\n      ...prev,\n      specialItems: newSpecialItems\n    }));\n  }, []);\n\n  // Floor details handlers\n  const updateFloorDetails = useCallback((field, value) => {\n    setFloorDetails(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  }, []);\n\n  // Reset form\n  const resetForm = useCallback(() => {\n    setInventoryData({\n      boxDetails: initializeBoxDetails(),\n      furnitureDetails: [],\n      applianceDetails: [],\n      specialItems: []\n    });\n    setFloorDetails({\n      liftAvailable: false,\n      numberOfStairs: 0,\n      liftAvailabledest: false,\n      numberofstairsright: 0\n    });\n  }, []);\n\n  // Get total item count\n  const getTotalItemCount = useCallback(() => {\n    const boxCount = inventoryData.boxDetails.reduce((sum, box) => sum + box.numberOfBoxes, 0);\n    const furnitureCount = inventoryData.furnitureDetails.reduce((sum, furniture) => sum + furniture.quantity, 0);\n    const applianceCount = inventoryData.applianceDetails.reduce((sum, appliance) => sum + appliance.quantity, 0);\n    const specialItemCount = inventoryData.specialItems.length;\n    return boxCount + furnitureCount + applianceCount + specialItemCount;\n  }, [inventoryData]);\n\n  // Get summary of selected items\n  const getInventorySummary = useCallback(() => {\n    const summary = {\n      boxes: inventoryData.boxDetails.filter(box => box.numberOfBoxes > 0),\n      furniture: inventoryData.furnitureDetails.filter(furniture => furniture.item && furniture.quantity > 0),\n      appliances: inventoryData.applianceDetails.filter(appliance => appliance.item && appliance.quantity > 0),\n      specialItems: inventoryData.specialItems.filter(item => item.type && item.description.trim()),\n      floorAccess: floorDetails,\n      totalItems: getTotalItemCount()\n    };\n    return summary;\n  }, [inventoryData, floorDetails, getTotalItemCount]);\n  return {\n    // State\n    inventoryData,\n    floorDetails,\n    isValid,\n    // Update handlers\n    updateBoxDetails,\n    updateFurnitureDetails,\n    updateApplianceDetails,\n    updateSpecialItems,\n    updateFloorDetails,\n    // Utility functions\n    resetForm,\n    getTotalItemCount,\n    getInventorySummary,\n    // Validation\n    validateInventory\n  };\n};\n_s(useInventoryForm, \"m3PyQkITeTh7xs8nD9ahzboLbNk=\");\nexport default useInventoryForm;","map":{"version":3,"names":["useState","useEffect","useCallback","useInventoryForm","initialDetails","onDetailsChange","_s","initializeBoxDetails","boxSize","numberOfBoxes","inventoryData","setInventoryData","boxDetails","furnitureDetails","applianceDetails","specialItems","floorDetails","setFloorDetails","liftAvailable","numberOfStairs","liftAvailabledest","numberofstairsright","isValid","setIsValid","validateInventory","hasBoxes","some","box","hasFurniture","furniture","item","quantity","hasAppliances","appliance","hasSpecialItems","type","description","trim","hasItems","validSpecialItems","every","validFurniture","validAppliances","valid","allDetails","updateBoxDetails","newBoxDetails","prev","updateFurnitureDetails","newFurnitureDetails","updateApplianceDetails","newApplianceDetails","updateSpecialItems","newSpecialItems","updateFloorDetails","field","value","resetForm","getTotalItemCount","boxCount","reduce","sum","furnitureCount","applianceCount","specialItemCount","length","getInventorySummary","summary","boxes","filter","appliances","floorAccess","totalItems"],"sources":["C:/Users/Runze Xia/Desktop/eremovals2/src/features/inventory/hooks/useInventoryForm.js"],"sourcesContent":["// src/features/inventory/hooks/useInventoryForm.js\r\nimport { useState, useEffect, useCallback } from 'react';\r\n\r\n/**\r\n * Custom hook for managing inventory form state and validation\r\n * @param {Object} initialDetails - Initial inventory details\r\n * @param {Function} onDetailsChange - Callback when details change\r\n * @returns {Object} Inventory form state and handlers\r\n */\r\nexport const useInventoryForm = (initialDetails = {}, onDetailsChange) => {\r\n    // Initialize box details with default structure\r\n    const initializeBoxDetails = () => [\r\n        { boxSize: 'small', numberOfBoxes: 0 },\r\n        { boxSize: 'medium', numberOfBoxes: 0 },\r\n        { boxSize: 'large', numberOfBoxes: 0 },\r\n        { boxSize: 'extraLarge', numberOfBoxes: 0 }\r\n    ];\r\n\r\n    // Initialize state\r\n    const [inventoryData, setInventoryData] = useState({\r\n        boxDetails: initialDetails.boxDetails || initializeBoxDetails(),\r\n        furnitureDetails: initialDetails.furnitureDetails || [],\r\n        applianceDetails: initialDetails.applianceDetails || [],\r\n        specialItems: initialDetails.specialItems || []\r\n    });\r\n\r\n    const [floorDetails, setFloorDetails] = useState({\r\n        liftAvailable: initialDetails.liftAvailable || false,\r\n        numberOfStairs: initialDetails.numberOfStairs || 0,\r\n        liftAvailabledest: initialDetails.liftAvailabledest || false,\r\n        numberofstairsright: initialDetails.numberofstairsright || 0\r\n    });\r\n\r\n    // Validation state\r\n    const [isValid, setIsValid] = useState(false);\r\n\r\n    // Validate inventory data\r\n    const validateInventory = useCallback(() => {\r\n        const hasBoxes = inventoryData.boxDetails.some(box => box.numberOfBoxes > 0);\r\n        const hasFurniture = inventoryData.furnitureDetails.some(furniture =>\r\n            furniture.item && furniture.quantity > 0\r\n        );\r\n        const hasAppliances = inventoryData.applianceDetails.some(appliance =>\r\n            appliance.item && appliance.quantity > 0\r\n        );\r\n        const hasSpecialItems = inventoryData.specialItems.some(item =>\r\n            item.type && item.description.trim()\r\n        );\r\n\r\n        // At least one item must be selected\r\n        const hasItems = hasBoxes || hasFurniture || hasAppliances || hasSpecialItems;\r\n\r\n        // All special items must have both type and description\r\n        const validSpecialItems = inventoryData.specialItems.every(item =>\r\n            (item.type && item.description.trim()) || (!item.type && !item.description.trim())\r\n        );\r\n\r\n        // All furniture items must have both item and quantity\r\n        const validFurniture = inventoryData.furnitureDetails.every(furniture =>\r\n            (furniture.item && furniture.quantity > 0) || (!furniture.item && furniture.quantity === 1)\r\n        );\r\n\r\n        // All appliance items must have both item and quantity\r\n        const validAppliances = inventoryData.applianceDetails.every(appliance =>\r\n            (appliance.item && appliance.quantity > 0) || (!appliance.item && appliance.quantity === 1)\r\n        );\r\n\r\n        return hasItems && validSpecialItems && validFurniture && validAppliances;\r\n    }, [inventoryData]);\r\n\r\n    // Update validation state when data changes\r\n    useEffect(() => {\r\n        const valid = validateInventory();\r\n        setIsValid(valid);\r\n    }, [validateInventory]);\r\n\r\n    // Notify parent of changes\r\n    useEffect(() => {\r\n        if (onDetailsChange) {\r\n            const allDetails = {\r\n                ...inventoryData,\r\n                ...floorDetails\r\n            };\r\n            onDetailsChange(allDetails);\r\n        }\r\n    }, [inventoryData, floorDetails, onDetailsChange]);\r\n\r\n    // Box details handlers\r\n    const updateBoxDetails = useCallback((newBoxDetails) => {\r\n        setInventoryData(prev => ({\r\n            ...prev,\r\n            boxDetails: newBoxDetails\r\n        }));\r\n    }, []);\r\n\r\n    // Furniture details handlers\r\n    const updateFurnitureDetails = useCallback((newFurnitureDetails) => {\r\n        setInventoryData(prev => ({\r\n            ...prev,\r\n            furnitureDetails: newFurnitureDetails\r\n        }));\r\n    }, []);\r\n\r\n    // Appliance details handlers\r\n    const updateApplianceDetails = useCallback((newApplianceDetails) => {\r\n        setInventoryData(prev => ({\r\n            ...prev,\r\n            applianceDetails: newApplianceDetails\r\n        }));\r\n    }, []);\r\n\r\n    // Special items handlers\r\n    const updateSpecialItems = useCallback((newSpecialItems) => {\r\n        setInventoryData(prev => ({\r\n            ...prev,\r\n            specialItems: newSpecialItems\r\n        }));\r\n    }, []);\r\n\r\n    // Floor details handlers\r\n    const updateFloorDetails = useCallback((field, value) => {\r\n        setFloorDetails(prev => ({\r\n            ...prev,\r\n            [field]: value\r\n        }));\r\n    }, []);\r\n\r\n    // Reset form\r\n    const resetForm = useCallback(() => {\r\n        setInventoryData({\r\n            boxDetails: initializeBoxDetails(),\r\n            furnitureDetails: [],\r\n            applianceDetails: [],\r\n            specialItems: []\r\n        });\r\n        setFloorDetails({\r\n            liftAvailable: false,\r\n            numberOfStairs: 0,\r\n            liftAvailabledest: false,\r\n            numberofstairsright: 0\r\n        });\r\n    }, []);\r\n\r\n    // Get total item count\r\n    const getTotalItemCount = useCallback(() => {\r\n        const boxCount = inventoryData.boxDetails.reduce((sum, box) => sum + box.numberOfBoxes, 0);\r\n        const furnitureCount = inventoryData.furnitureDetails.reduce((sum, furniture) => sum + furniture.quantity, 0);\r\n        const applianceCount = inventoryData.applianceDetails.reduce((sum, appliance) => sum + appliance.quantity, 0);\r\n        const specialItemCount = inventoryData.specialItems.length;\r\n\r\n        return boxCount + furnitureCount + applianceCount + specialItemCount;\r\n    }, [inventoryData]);\r\n\r\n    // Get summary of selected items\r\n    const getInventorySummary = useCallback(() => {\r\n        const summary = {\r\n            boxes: inventoryData.boxDetails.filter(box => box.numberOfBoxes > 0),\r\n            furniture: inventoryData.furnitureDetails.filter(furniture => furniture.item && furniture.quantity > 0),\r\n            appliances: inventoryData.applianceDetails.filter(appliance => appliance.item && appliance.quantity > 0),\r\n            specialItems: inventoryData.specialItems.filter(item => item.type && item.description.trim()),\r\n            floorAccess: floorDetails,\r\n            totalItems: getTotalItemCount()\r\n        };\r\n\r\n        return summary;\r\n    }, [inventoryData, floorDetails, getTotalItemCount]);\r\n\r\n    return {\r\n        // State\r\n        inventoryData,\r\n        floorDetails,\r\n        isValid,\r\n\r\n        // Update handlers\r\n        updateBoxDetails,\r\n        updateFurnitureDetails,\r\n        updateApplianceDetails,\r\n        updateSpecialItems,\r\n        updateFloorDetails,\r\n\r\n        // Utility functions\r\n        resetForm,\r\n        getTotalItemCount,\r\n        getInventorySummary,\r\n\r\n        // Validation\r\n        validateInventory\r\n    };\r\n};\r\n\r\nexport default useInventoryForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}