{"ast":null,"code":"var _s = $RefreshSig$();\n// src/features/booking/hooks/usePaymentProcessing.js\nimport { useState, useCallback } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { bookingService } from '../services/bookingService';\nimport { useBookingContext } from '../context/BookingContext';\nimport config from '../../../config/config';\nconst stripePromise = loadStripe(config.apiKeys.stripe);\n\n/**\r\n * Custom hook for handling payment processing\r\n * @returns {Object} Payment processing state and handlers\r\n */\nexport const usePaymentProcessing = () => {\n  _s();\n  const {\n    bookingId,\n    pricing,\n    setError,\n    clearError\n  } = useBookingContext();\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  /**\r\n   * Process payment for booking without helper\r\n   */\n  const processStandardPayment = useCallback(async () => {\n    if (!bookingId) {\n      setError('No booking ID found');\n      return;\n    }\n    setIsProcessing(true);\n    clearError();\n    try {\n      const {\n        sessionId\n      } = await bookingService.createCheckoutSession(bookingId, pricing.finalPrice || pricing.basePrice);\n      if (!sessionId) {\n        throw new Error('No session ID returned from payment service');\n      }\n      const stripe = await stripePromise;\n      const {\n        error\n      } = await stripe.redirectToCheckout({\n        sessionId\n      });\n      if (error) {\n        throw new Error(`Payment redirect error: ${error.message}`);\n      }\n    } catch (error) {\n      console.error('Payment processing error:', error);\n      setError(error.message || 'Payment processing failed');\n    } finally {\n      setIsProcessing(false);\n    }\n  }, [bookingId, pricing, setError, clearError]);\n\n  /**\r\n   * Process payment for booking with helper\r\n   */\n  const processHelperPayment = useCallback(async () => {\n    if (!bookingId) {\n      setError('No booking ID found');\n      return;\n    }\n    setIsProcessing(true);\n    clearError();\n    try {\n      const {\n        sessionId\n      } = await bookingService.createCheckoutSessionWithHelper(bookingId, pricing.helperPrice);\n      if (!sessionId) {\n        throw new Error('No session ID returned from payment service');\n      }\n      const stripe = await stripePromise;\n      const {\n        error\n      } = await stripe.redirectToCheckout({\n        sessionId\n      });\n      if (error) {\n        throw new Error(`Payment redirect error: ${error.message}`);\n      }\n    } catch (error) {\n      console.error('Helper payment processing error:', error);\n      setError(error.message || 'Payment processing failed');\n    } finally {\n      setIsProcessing(false);\n    }\n  }, [bookingId, pricing, setError, clearError]);\n  return {\n    isProcessing,\n    processStandardPayment,\n    processHelperPayment\n  };\n};\n_s(usePaymentProcessing, \"p0JIv+Bt2VKDo7wgR/KZdrcaKtM=\", false, function () {\n  return [useBookingContext];\n});","map":{"version":3,"names":["useState","useCallback","loadStripe","bookingService","useBookingContext","config","stripePromise","apiKeys","stripe","usePaymentProcessing","_s","bookingId","pricing","setError","clearError","isProcessing","setIsProcessing","processStandardPayment","sessionId","createCheckoutSession","finalPrice","basePrice","Error","error","redirectToCheckout","message","console","processHelperPayment","createCheckoutSessionWithHelper","helperPrice"],"sources":["C:/Users/Runze Xia/Desktop/eremovals2/src/features/booking/hooks/usePaymentProcessing.js"],"sourcesContent":["// src/features/booking/hooks/usePaymentProcessing.js\r\nimport { useState, useCallback } from 'react';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { bookingService } from '../services/bookingService';\r\nimport { useBookingContext } from '../context/BookingContext';\r\nimport config from '../../../config/config';\r\n\r\nconst stripePromise = loadStripe(config.apiKeys.stripe);\r\n\r\n/**\r\n * Custom hook for handling payment processing\r\n * @returns {Object} Payment processing state and handlers\r\n */\r\nexport const usePaymentProcessing = () => {\r\n    const { bookingId, pricing, setError, clearError } = useBookingContext();\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n    /**\r\n     * Process payment for booking without helper\r\n     */\r\n    const processStandardPayment = useCallback(async () => {\r\n        if (!bookingId) {\r\n            setError('No booking ID found');\r\n            return;\r\n        }\r\n\r\n        setIsProcessing(true);\r\n        clearError();\r\n\r\n        try {\r\n            const { sessionId } = await bookingService.createCheckoutSession(\r\n                bookingId,\r\n                pricing.finalPrice || pricing.basePrice\r\n            );\r\n\r\n            if (!sessionId) {\r\n                throw new Error('No session ID returned from payment service');\r\n            }\r\n\r\n            const stripe = await stripePromise;\r\n            const { error } = await stripe.redirectToCheckout({ sessionId });\r\n\r\n            if (error) {\r\n                throw new Error(`Payment redirect error: ${error.message}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Payment processing error:', error);\r\n            setError(error.message || 'Payment processing failed');\r\n        } finally {\r\n            setIsProcessing(false);\r\n        }\r\n    }, [bookingId, pricing, setError, clearError]);\r\n\r\n    /**\r\n     * Process payment for booking with helper\r\n     */\r\n    const processHelperPayment = useCallback(async () => {\r\n        if (!bookingId) {\r\n            setError('No booking ID found');\r\n            return;\r\n        }\r\n\r\n        setIsProcessing(true);\r\n        clearError();\r\n\r\n        try {\r\n            const { sessionId } = await bookingService.createCheckoutSessionWithHelper(\r\n                bookingId,\r\n                pricing.helperPrice\r\n            );\r\n\r\n            if (!sessionId) {\r\n                throw new Error('No session ID returned from payment service');\r\n            }\r\n\r\n            const stripe = await stripePromise;\r\n            const { error } = await stripe.redirectToCheckout({ sessionId });\r\n\r\n            if (error) {\r\n                throw new Error(`Payment redirect error: ${error.message}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Helper payment processing error:', error);\r\n            setError(error.message || 'Payment processing failed');\r\n        } finally {\r\n            setIsProcessing(false);\r\n        }\r\n    }, [bookingId, pricing, setError, clearError]);\r\n\r\n    return {\r\n        isProcessing,\r\n        processStandardPayment,\r\n        processHelperPayment\r\n    };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}