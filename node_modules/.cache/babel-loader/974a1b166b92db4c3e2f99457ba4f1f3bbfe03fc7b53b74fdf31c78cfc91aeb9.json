{"ast":null,"code":"var _s = $RefreshSig$();\n// src/features/quotes/hooks/usePromoCode.js\nimport { useState, useCallback } from 'react';\nimport { quoteService } from '../services/quoteService';\n\n/**\r\n * Hook for managing promotion code functionality\r\n * @param {string} bookingId - ID of the booking\r\n * @param {number} originalPrice - Original price before discount\r\n * @param {number} originalHelperPrice - Original helper price before discount\r\n * @returns {Object} Promo code functionality and state\r\n */\nexport const usePromoCode = (bookingId, originalPrice = 0, originalHelperPrice = 0) => {\n  _s();\n  const [currentPrice, setCurrentPrice] = useState(originalPrice);\n  const [currentHelperPrice, setCurrentHelperPrice] = useState(originalHelperPrice);\n  const [discount, setDiscount] = useState(0);\n  const [isApplying, setIsApplying] = useState(false);\n  const [error, setError] = useState(null);\n  const applyPromoCode = useCallback(async promoCode => {\n    if (!promoCode || promoCode.length !== 6) {\n      throw new Error('Invalid promotion code format');\n    }\n    setIsApplying(true);\n    setError(null);\n    try {\n      const result = await quoteService.applyPromoCode(bookingId, promoCode);\n      if (result.success) {\n        setCurrentPrice(result.newPrice);\n        setCurrentHelperPrice(result.newHelperPrice);\n        setDiscount(result.discount);\n        return {\n          success: true,\n          newPrice: result.newPrice,\n          newHelperPrice: result.newHelperPrice,\n          discount: result.discount\n        };\n      } else {\n        throw new Error(result.error || 'Invalid promotion code');\n      }\n    } catch (err) {\n      const errorMessage = err.message || 'Failed to apply promotion code';\n      setError(errorMessage);\n      throw err;\n    } finally {\n      setIsApplying(false);\n    }\n  }, [bookingId]);\n  const resetPromoCode = useCallback(() => {\n    setCurrentPrice(originalPrice);\n    setCurrentHelperPrice(originalHelperPrice);\n    setDiscount(0);\n    setError(null);\n  }, [originalPrice, originalHelperPrice]);\n  const refreshPrices = useCallback(async () => {\n    if (!bookingId) return;\n    try {\n      const latestPrices = await quoteService.getLatestPrices(bookingId);\n      setCurrentPrice(latestPrices.price);\n      setCurrentHelperPrice(latestPrices.helperPrice);\n    } catch (err) {\n      console.error('Error refreshing prices:', err);\n    }\n  }, [bookingId]);\n  return {\n    currentPrice,\n    currentHelperPrice,\n    discount,\n    isApplying,\n    error,\n    applyPromoCode,\n    resetPromoCode,\n    refreshPrices\n  };\n};\n_s(usePromoCode, \"EUhIXiOCZJSaVANxnKFFUYeG1n4=\");","map":{"version":3,"names":["useState","useCallback","quoteService","usePromoCode","bookingId","originalPrice","originalHelperPrice","_s","currentPrice","setCurrentPrice","currentHelperPrice","setCurrentHelperPrice","discount","setDiscount","isApplying","setIsApplying","error","setError","applyPromoCode","promoCode","length","Error","result","success","newPrice","newHelperPrice","err","errorMessage","message","resetPromoCode","refreshPrices","latestPrices","getLatestPrices","price","helperPrice","console"],"sources":["C:/Users/Runze Xia/Desktop/eremovals2/src/features/quotes/hooks/usePromoCode.js"],"sourcesContent":["// src/features/quotes/hooks/usePromoCode.js\r\nimport { useState, useCallback } from 'react';\r\nimport { quoteService } from '../services/quoteService';\r\n\r\n/**\r\n * Hook for managing promotion code functionality\r\n * @param {string} bookingId - ID of the booking\r\n * @param {number} originalPrice - Original price before discount\r\n * @param {number} originalHelperPrice - Original helper price before discount\r\n * @returns {Object} Promo code functionality and state\r\n */\r\nexport const usePromoCode = (bookingId, originalPrice = 0, originalHelperPrice = 0) => {\r\n    const [currentPrice, setCurrentPrice] = useState(originalPrice);\r\n    const [currentHelperPrice, setCurrentHelperPrice] = useState(originalHelperPrice);\r\n    const [discount, setDiscount] = useState(0);\r\n    const [isApplying, setIsApplying] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const applyPromoCode = useCallback(async (promoCode) => {\r\n        if (!promoCode || promoCode.length !== 6) {\r\n            throw new Error('Invalid promotion code format');\r\n        }\r\n\r\n        setIsApplying(true);\r\n        setError(null);\r\n\r\n        try {\r\n            const result = await quoteService.applyPromoCode(bookingId, promoCode);\r\n\r\n            if (result.success) {\r\n                setCurrentPrice(result.newPrice);\r\n                setCurrentHelperPrice(result.newHelperPrice);\r\n                setDiscount(result.discount);\r\n\r\n                return {\r\n                    success: true,\r\n                    newPrice: result.newPrice,\r\n                    newHelperPrice: result.newHelperPrice,\r\n                    discount: result.discount\r\n                };\r\n            } else {\r\n                throw new Error(result.error || 'Invalid promotion code');\r\n            }\r\n        } catch (err) {\r\n            const errorMessage = err.message || 'Failed to apply promotion code';\r\n            setError(errorMessage);\r\n            throw err;\r\n        } finally {\r\n            setIsApplying(false);\r\n        }\r\n    }, [bookingId]);\r\n\r\n    const resetPromoCode = useCallback(() => {\r\n        setCurrentPrice(originalPrice);\r\n        setCurrentHelperPrice(originalHelperPrice);\r\n        setDiscount(0);\r\n        setError(null);\r\n    }, [originalPrice, originalHelperPrice]);\r\n\r\n    const refreshPrices = useCallback(async () => {\r\n        if (!bookingId) return;\r\n\r\n        try {\r\n            const latestPrices = await quoteService.getLatestPrices(bookingId);\r\n            setCurrentPrice(latestPrices.price);\r\n            setCurrentHelperPrice(latestPrices.helperPrice);\r\n        } catch (err) {\r\n            console.error('Error refreshing prices:', err);\r\n        }\r\n    }, [bookingId]);\r\n\r\n    return {\r\n        currentPrice,\r\n        currentHelperPrice,\r\n        discount,\r\n        isApplying,\r\n        error,\r\n        applyPromoCode,\r\n        resetPromoCode,\r\n        refreshPrices\r\n    };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}