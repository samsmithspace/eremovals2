{"ast":null,"code":"// src/config/routes.js\n/**\r\n * Application routes configuration\r\n * Centralizes route definitions for easier management\r\n */\nconst routes = {\n  // Public routes\n  public: {\n    home: '/:lang',\n    location: '/:lang/location',\n    quote: '/:lang/quote',\n    contact: '/:lang/contact',\n    termsAndConditions: '/:lang/terms-and-conditions',\n    bookingResult: '/:lang/booking-result',\n    bookingCancel: '/:lang/booking-cancel'\n  },\n  // Route parameter patterns for validation\n  patterns: {\n    lang: /^(en|zh)$/,\n    bookingId: /^[a-f\\d]{24}$/i\n  },\n  // Route generation helpers\n  generate: {\n    /**\r\n     * Generate a path with the given language and optional params\r\n     * @param {string} routeName - Name of the route\r\n     * @param {string} lang - Language code\r\n     * @param {Object} params - Route parameters\r\n     * @returns {string} Generated route path\r\n     */\n    path: (routeName, lang = 'en', params = {}) => {\n      const route = routes.public[routeName];\n      if (!route) throw new Error(`Route \"${routeName}\" not found`);\n\n      // Replace :lang with actual language\n      let path = route.replace(':lang', lang);\n\n      // Replace other params\n      Object.entries(params).forEach(([key, value]) => {\n        path = path.replace(`:${key}`, value);\n      });\n      return path;\n    },\n    /**\r\n     * Generate home route for the given language\r\n     * @param {string} lang - Language code\r\n     * @returns {string} Home route path\r\n     */\n    home: (lang = 'en') => routes.generate.path('home', lang),\n    /**\r\n     * Generate location selection route for the given language\r\n     * @param {string} lang - Language code\r\n     * @returns {string} Location selection route path\r\n     */\n    location: (lang = 'en') => routes.generate.path('location', lang),\n    /**\r\n     * Generate quote route for the given language\r\n     * @param {string} lang - Language code\r\n     * @returns {string} Quote route path\r\n     */\n    quote: (lang = 'en') => routes.generate.path('quote', lang)\n  },\n  // URL query parameter names\n  queryParams: {\n    bookingId: 'bookingId',\n    locationType: 'locationType',\n    redirectUrl: 'redirectUrl'\n  }\n};\nexport default routes;","map":{"version":3,"names":["routes","public","home","location","quote","contact","termsAndConditions","bookingResult","bookingCancel","patterns","lang","bookingId","generate","path","routeName","params","route","Error","replace","Object","entries","forEach","key","value","queryParams","locationType","redirectUrl"],"sources":["C:/Users/Runze Xia/Desktop/eremovals2/src/config/routes.js"],"sourcesContent":["// src/config/routes.js\r\n/**\r\n * Application routes configuration\r\n * Centralizes route definitions for easier management\r\n */\r\nconst routes = {\r\n    // Public routes\r\n    public: {\r\n        home: '/:lang',\r\n        location: '/:lang/location',\r\n        quote: '/:lang/quote',\r\n        contact: '/:lang/contact',\r\n        termsAndConditions: '/:lang/terms-and-conditions',\r\n        bookingResult: '/:lang/booking-result',\r\n        bookingCancel: '/:lang/booking-cancel'\r\n    },\r\n\r\n    // Route parameter patterns for validation\r\n    patterns: {\r\n        lang: /^(en|zh)$/,\r\n        bookingId: /^[a-f\\d]{24}$/i\r\n    },\r\n\r\n    // Route generation helpers\r\n    generate: {\r\n        /**\r\n         * Generate a path with the given language and optional params\r\n         * @param {string} routeName - Name of the route\r\n         * @param {string} lang - Language code\r\n         * @param {Object} params - Route parameters\r\n         * @returns {string} Generated route path\r\n         */\r\n        path: (routeName, lang = 'en', params = {}) => {\r\n            const route = routes.public[routeName];\r\n            if (!route) throw new Error(`Route \"${routeName}\" not found`);\r\n\r\n            // Replace :lang with actual language\r\n            let path = route.replace(':lang', lang);\r\n\r\n            // Replace other params\r\n            Object.entries(params).forEach(([key, value]) => {\r\n                path = path.replace(`:${key}`, value);\r\n            });\r\n\r\n            return path;\r\n        },\r\n\r\n        /**\r\n         * Generate home route for the given language\r\n         * @param {string} lang - Language code\r\n         * @returns {string} Home route path\r\n         */\r\n        home: (lang = 'en') => routes.generate.path('home', lang),\r\n\r\n        /**\r\n         * Generate location selection route for the given language\r\n         * @param {string} lang - Language code\r\n         * @returns {string} Location selection route path\r\n         */\r\n        location: (lang = 'en') => routes.generate.path('location', lang),\r\n\r\n        /**\r\n         * Generate quote route for the given language\r\n         * @param {string} lang - Language code\r\n         * @returns {string} Quote route path\r\n         */\r\n        quote: (lang = 'en') => routes.generate.path('quote', lang)\r\n    },\r\n\r\n    // URL query parameter names\r\n    queryParams: {\r\n        bookingId: 'bookingId',\r\n        locationType: 'locationType',\r\n        redirectUrl: 'redirectUrl'\r\n    }\r\n};\r\n\r\nexport default routes;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,MAAMA,MAAM,GAAG;EACX;EACAC,MAAM,EAAE;IACJC,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE,iBAAiB;IAC3BC,KAAK,EAAE,cAAc;IACrBC,OAAO,EAAE,gBAAgB;IACzBC,kBAAkB,EAAE,6BAA6B;IACjDC,aAAa,EAAE,uBAAuB;IACtCC,aAAa,EAAE;EACnB,CAAC;EAED;EACAC,QAAQ,EAAE;IACNC,IAAI,EAAE,WAAW;IACjBC,SAAS,EAAE;EACf,CAAC;EAED;EACAC,QAAQ,EAAE;IACN;AACR;AACA;AACA;AACA;AACA;AACA;IACQC,IAAI,EAAEA,CAACC,SAAS,EAAEJ,IAAI,GAAG,IAAI,EAAEK,MAAM,GAAG,CAAC,CAAC,KAAK;MAC3C,MAAMC,KAAK,GAAGhB,MAAM,CAACC,MAAM,CAACa,SAAS,CAAC;MACtC,IAAI,CAACE,KAAK,EAAE,MAAM,IAAIC,KAAK,CAAC,UAAUH,SAAS,aAAa,CAAC;;MAE7D;MACA,IAAID,IAAI,GAAGG,KAAK,CAACE,OAAO,CAAC,OAAO,EAAER,IAAI,CAAC;;MAEvC;MACAS,MAAM,CAACC,OAAO,CAACL,MAAM,CAAC,CAACM,OAAO,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK;QAC7CV,IAAI,GAAGA,IAAI,CAACK,OAAO,CAAC,IAAII,GAAG,EAAE,EAAEC,KAAK,CAAC;MACzC,CAAC,CAAC;MAEF,OAAOV,IAAI;IACf,CAAC;IAED;AACR;AACA;AACA;AACA;IACQX,IAAI,EAAEA,CAACQ,IAAI,GAAG,IAAI,KAAKV,MAAM,CAACY,QAAQ,CAACC,IAAI,CAAC,MAAM,EAAEH,IAAI,CAAC;IAEzD;AACR;AACA;AACA;AACA;IACQP,QAAQ,EAAEA,CAACO,IAAI,GAAG,IAAI,KAAKV,MAAM,CAACY,QAAQ,CAACC,IAAI,CAAC,UAAU,EAAEH,IAAI,CAAC;IAEjE;AACR;AACA;AACA;AACA;IACQN,KAAK,EAAEA,CAACM,IAAI,GAAG,IAAI,KAAKV,MAAM,CAACY,QAAQ,CAACC,IAAI,CAAC,OAAO,EAAEH,IAAI;EAC9D,CAAC;EAED;EACAc,WAAW,EAAE;IACTb,SAAS,EAAE,WAAW;IACtBc,YAAY,EAAE,cAAc;IAC5BC,WAAW,EAAE;EACjB;AACJ,CAAC;AAED,eAAe1B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}