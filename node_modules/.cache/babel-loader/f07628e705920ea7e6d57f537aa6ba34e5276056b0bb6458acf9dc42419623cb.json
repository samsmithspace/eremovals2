{"ast":null,"code":"var _s = $RefreshSig$();\n// src/features/locations/hooks/useAddressLookup.js\nimport { useState, useEffect } from 'react';\nimport { locationService } from '../services/locationService';\n\n/**\r\n * Hook for looking up detailed addresses based on postcode\r\n * @param {string} postcode - Postcode to lookup addresses for\r\n * @returns {Object} Addresses array and loading state\r\n */\nexport const useAddressLookup = postcode => {\n  _s();\n  const [addresses, setAddresses] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchAddresses = async () => {\n      if (!postcode || postcode.length < 3) {\n        setAddresses([]);\n        return;\n      }\n      setIsLoading(true);\n      setError(null);\n      try {\n        const addressData = await locationService.getAddressesByPostcode(postcode);\n        setAddresses(addressData);\n      } catch (err) {\n        console.error('Error fetching addresses:', err);\n        setError(err.message);\n        setAddresses([]);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    // Debounce the API call\n    const timeoutId = setTimeout(fetchAddresses, 300);\n    return () => clearTimeout(timeoutId);\n  }, [postcode]);\n  return {\n    addresses,\n    isLoading,\n    error,\n    hasAddresses: addresses.length > 0\n  };\n};\n_s(useAddressLookup, \"uo25LROdxJjD1rG2DiqrlE6nn2M=\");","map":{"version":3,"names":["useState","useEffect","locationService","useAddressLookup","postcode","_s","addresses","setAddresses","isLoading","setIsLoading","error","setError","fetchAddresses","length","addressData","getAddressesByPostcode","err","console","message","timeoutId","setTimeout","clearTimeout","hasAddresses"],"sources":["C:/Users/Runze Xia/Desktop/eremovals2/src/features/locations/hooks/useAddressLookup.js"],"sourcesContent":["// src/features/locations/hooks/useAddressLookup.js\r\nimport { useState, useEffect } from 'react';\r\nimport { locationService } from '../services/locationService';\r\n\r\n/**\r\n * Hook for looking up detailed addresses based on postcode\r\n * @param {string} postcode - Postcode to lookup addresses for\r\n * @returns {Object} Addresses array and loading state\r\n */\r\nexport const useAddressLookup = (postcode) => {\r\n    const [addresses, setAddresses] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchAddresses = async () => {\r\n            if (!postcode || postcode.length < 3) {\r\n                setAddresses([]);\r\n                return;\r\n            }\r\n\r\n            setIsLoading(true);\r\n            setError(null);\r\n\r\n            try {\r\n                const addressData = await locationService.getAddressesByPostcode(postcode);\r\n                setAddresses(addressData);\r\n            } catch (err) {\r\n                console.error('Error fetching addresses:', err);\r\n                setError(err.message);\r\n                setAddresses([]);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        // Debounce the API call\r\n        const timeoutId = setTimeout(fetchAddresses, 300);\r\n\r\n        return () => clearTimeout(timeoutId);\r\n    }, [postcode]);\r\n\r\n    return {\r\n        addresses,\r\n        isLoading,\r\n        error,\r\n        hasAddresses: addresses.length > 0\r\n    };\r\n};\r\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,eAAe,QAAQ,6BAA6B;;AAE7D;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAIC,QAAQ,IAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI,CAACR,QAAQ,IAAIA,QAAQ,CAACS,MAAM,GAAG,CAAC,EAAE;QAClCN,YAAY,CAAC,EAAE,CAAC;QAChB;MACJ;MAEAE,YAAY,CAAC,IAAI,CAAC;MAClBE,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAI;QACA,MAAMG,WAAW,GAAG,MAAMZ,eAAe,CAACa,sBAAsB,CAACX,QAAQ,CAAC;QAC1EG,YAAY,CAACO,WAAW,CAAC;MAC7B,CAAC,CAAC,OAAOE,GAAG,EAAE;QACVC,OAAO,CAACP,KAAK,CAAC,2BAA2B,EAAEM,GAAG,CAAC;QAC/CL,QAAQ,CAACK,GAAG,CAACE,OAAO,CAAC;QACrBX,YAAY,CAAC,EAAE,CAAC;MACpB,CAAC,SAAS;QACNE,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;;IAED;IACA,MAAMU,SAAS,GAAGC,UAAU,CAACR,cAAc,EAAE,GAAG,CAAC;IAEjD,OAAO,MAAMS,YAAY,CAACF,SAAS,CAAC;EACxC,CAAC,EAAE,CAACf,QAAQ,CAAC,CAAC;EAEd,OAAO;IACHE,SAAS;IACTE,SAAS;IACTE,KAAK;IACLY,YAAY,EAAEhB,SAAS,CAACO,MAAM,GAAG;EACrC,CAAC;AACL,CAAC;AAACR,EAAA,CAvCWF,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}